Perfeitamente, Yuri! 😄
Aqui está um **README.md** completo para o seu projeto **CineGallery**, explicando o app, as funcionalidades, estrutura de código e dependências. Você pode copiar direto para o seu repositório no GitHub:

---

# CineGallery

🎬 **CineGallery** é um aplicativo de galeria de filmes desenvolvido em **React Native**, que permite aos usuários navegar pelos filmes mais populares, favoritar seus filmes preferidos e manter uma sessão persistente. O app também inclui um onboarding inicial para novos usuários.

---

## 📌 Funcionalidades

1. **Onboarding**

   * Tela inicial que apresenta o app ao usuário.
   * O usuário só vê o onboarding uma vez.
   * Botão "Começar" leva à tela de login.

2. **Login**

   * Campos para usuário e senha.
   * Validação simples (qualquer valor não vazio funciona).
   * Persistência de login com **AsyncStorage**.
   * Redireciona para a tela principal (`MainTabs`) se estiver logado.

3. **Home**

   * Mensagem de boas-vindas personalizada com o nome do usuário.
   * Botões para:

     * Acessar a **Galeria de Filmes**.
     * Fazer **Logout** (limpa AsyncStorage e retorna à tela de login).

4. **Galeria de Filmes**

   * Consome a API **OMDb** para buscar filmes populares.
   * Exibe filmes em uma grade (`FlatList`) com pôster, título e ano.
   * Pesquisa de filmes por nome.
   * Botão ⭐ para favoritar/desfavoritar filmes.
   * Indicador visual mostrando se o filme está favoritado.
   * Pré-carrega filmes recomendados ao abrir a aba.

5. **Favoritos**

   * Lista todos os filmes favoritados pelo usuário.
   * Permite remover filmes da lista.
   * Atualiza dinamicamente ao abrir a aba.
   * Usa ícones (`Ionicons`) ao invés de emojis.

6. **Persistência de Dados**

   * **AsyncStorage** é usado para:

     * Salvar estado de login.
     * Salvar nome do usuário.
     * Salvar filmes favoritados.
     * Salvar se o onboarding já foi visualizado.

---

## 🗂 Estrutura do Projeto

```
CineGallery/
│
├─ src/
│   └─ Pages/
│       ├─ Onboarding.js      // Tela de boas-vindas inicial
│       ├─ Login.js           // Tela de login
│       ├─ Home.js            // Tela principal
│       ├─ Gallery.js         // Tela da galeria de filmes
│       └─ Favoritos.js       // Tela de favoritos
│
├─ App.js                    // Arquivo principal com Stack e Tab Navigator
└─ package.json              // Dependências do projeto
```

---

## ⚡ Tecnologias Usadas

* **React Native** (mobile cross-platform)
* **React Navigation** (stack e bottom tabs)
* **AsyncStorage** (persistência de dados)
* **OMDb API** (busca de filmes)
* **Axios** (requisições HTTP)
* **Ionicons** (ícones)

---

## 📦 Instalação

1. Clone o repositório:

```bash
git clone https://github.com/seu-usuario/CineGallery.git
cd CineGallery
```

2. Instale dependências:

```bash
npm install
```

ou

```bash
yarn install
```

3. Execute o projeto:

```bash
npx expo start
```

ou, se estiver usando React Native CLI:

```bash
npx react-native run-android
npx react-native run-ios
```

---

## 🔑 Configuração da API

* Utilize a chave da **OMDb API**:

```javascript
const API_KEY = "882fa1a2";
```

* Exemplo de endpoint para buscar filmes:

```url
https://www.omdbapi.com/?s=batman&type=movie&page=1&apikey=882fa1a2
```

---

## 📄 Notas sobre o Código

1. **Onboarding.js**

   * Define a primeira tela com botão de início.
   * Salva no AsyncStorage que o onboarding foi concluído.
   * Navega para a tela Login.

2. **Login.js**

   * Valida inputs.
   * Salva estado de login e usuário no AsyncStorage.
   * Redireciona para `MainTabs`.

3. **Home.js**

   * Mostra boas-vindas com o nome do usuário.
   * Botões para acessar a galeria ou sair.
   * Logout limpa AsyncStorage e retorna à tela Login.

4. **Gallery.js**

   * Busca filmes da OMDb API.
   * Exibe grade de filmes com FlatList.
   * Permite favoritar filmes com ícones dinâmicos.
   * Pré-carrega filmes recomendados antes da pesquisa.

5. **Favoritos.js**

   * Lista filmes favoritados.
   * Permite remover filmes da lista.
   * Atualiza automaticamente ao focar na aba.

6. **App.js**

   * Configura Stack e Bottom Tab Navigator.
   * Define tela inicial baseada no estado de login.
   * Tabs: Home e Favoritos com ícones.

---

## 📷 Preview do App

* **Onboarding**
* **Login**
* **Home**
* **Galeria de Filmes**
* **Favoritos**

*(Insira capturas de tela se quiser no GitHub)*

---

## 📝 Autor

* **Yuri** – Desenvolvedor do CineGallery

---

Se você quiser, posso também gerar **uma versão resumida do README** já pronta para **copiar e colar no GitHub**, incluindo **todas as dependências e comandos para rodar o projeto**.

Quer que eu faça essa versão pronta?
